* To be done 
** Style and neatness
   - [X] Change gimme-filter for something more appropriate
   - [ ] Rewrite the sort calls on lyrics.rb using max_by or inject!
   - [ ] Some functions take optional arguments, and some other have
	 auxiliary function
   - [ ] Replace for local variables the bunch of global variables
	 that are there whenever possible
   - [ ] Some functions take a lot of arguments, and others take a plist.
   - [ ] The order of the arguments is usually inconsistent too.
   - [ ] There are some very ugly functions, such as gimme-coll-changed.
   - [ ] Perhaps separate interface functions from the others?
   - [ ] Subcol and group are being used interchangeably
   - [ ] Coll or col? Decide!
   - [ ] Gimme-colors is being set at the end of gimme-custom because
	 it requires traditional-japanese-colors
   - [ ] The tagwriter sometimes refer to the line from the top of the
	 document and sometimes from the top of the table.
** Bugs
   - [ ] The update broadcast changes the format of the updated tracks
   - [ ] I'm using single quotes all the time. I don't think it's gonna
	 play well with tags that include it
   - [ ] The broadcast function is sometimes returning a wrong value
	 for the :timesplayed property. Fix'd for medialib_changed but not
	 for the other.
   - [ ] 'colls' is not set sometimes, for some reason, in the tagwriter.
** User experience
   - [ ] Group the facets?
   - [ ] Autocomplete: Make the *GIMME Completions* buffer scroll
   - [ ] Weird stuff get copied to the clipboard sometimes
   - [ ] Make collection-mode more powerful
** Meta
   - [ ] Remove the FIXMEs and put them all here
   - [ ] Bot to send me back changes in gimmeplayer.org
** Efficiency concerns
   - [ ] Is autocompletion scaling for 10k tracks? See https://github.com/rails/auto_complete
   - [ ] Saving/changing a lot of songs in the tagwriter is slow.
** Augmented
   - [ ] Improve the niche lyrics fetcher
   - [ ] Try first getting lyrics using the extended properties of Freebase
   - [ ] Radio list
   - [ ] Figure out why a query like isn't working on Freebase
    
    	'[{"type"=>"/music/artist",
    	"name"=>[], "/influence/influence_node/influenced"=>
    	{"type"=>"/music/artist", "id"=>[],
    	"/common/topic/alias"=>"Johann Sebastian Bach"}}]'
   - [ ] 'ask-for-info' could format the data more neatly and provide more info
   - [ ] Saving lyrics and such on lyricwiki
** Sane defaults
   - [ ] Equalizer presets
** Embracing new users
   - [ ] Show key bindings. I think this is crucial
   - [ ] Some tutorial on how to set the equalizer
** Remove dependencies
   - [ ] A better htmlr
** GIMME 3
   - [ ] Write everything in Elisp
   - [ ] Collection inpector as neat as vdust's
   - [ ] Musicbrainz interface
   - [ ] Undo
   - [ ] Nesting collections. It seems that it's possible to add a "parent" key to it.
** Acessibility
   - [ ] Keybindings for augmented mode
	 
* What I didn't do in the GSoC
  - [ ] New collections' format and parser: they are not ready yet
  - [ ] Spectrum analyzer: couldn't really. I think there is no
	support for that
  - [ ] Updating collection: It's done by some client, as far I could
	comprehend
  - [ ] ELPA: I think I'll have to make it more lispy first
  - [ ] Marketing: TBD
  - [ ] Packages: TBD

* UI Analysis
** Nielsen's criteria
*** System state

    It's clearly visible which mode you are in when you take a look at
    the buffer's title. People start looking at the top position,
    however, so it takes more than a glance to realize where you
    are. Ok, but not optimal.

    When it's playing, the status-bar changes, which is pretty nice.

    4/5

*** State consistency

    There is no gap between the playlist object and what is presented to
    the user. When a collection is changed or deleted, however, its
    buffer won't reflect the changes.

    4/5

*** Autonomy

    The system is 100% guided by the user at any time.

    5/5

*** Internal consistency

    There are operations that you can only do browsing collections, like
    adding everything, others only in bookmark-view, like selecting with
    SPC. The whole thing is a mess and keystrokes are not consistent.

    2/5

*** Error prevention

    Didn't even explore this. A cool hack that some apps do is binding
    destructive operations to capitalized keys.

    If searching for the wrong thing is an error, perhaps there could be
    some sort of search suggestion mechanism, like Google's

    4/5

*** Recognition

    The user has to remember the parent and children collections when
    browsing a collection. It would be nice if the search tree was
    somehow shown. I doubt it's possible to create a floating object on
    Emacs, however.

    The clipboard contents are also to be remembered. I think this is no
    big deal.
    
    4/5

*** Flexibility

    The only time-consuming operations are those involving getting
    better collections. Some people might prefer doing so by narrowing,
    and other might prefer combining them manually, and GIMME supports
    both kinds of operations. A way of displaying the data facetedly
    would be nice, but guess what? I'm gonna develop it :D
    
    5/5

*** Aesthetics

    Yep, minimalistic with plenty of empty space to the eyes. I
    particularly like the colors GIMME uses, which are called
    "Traditional Japanese Colors".

    5/5

*** Error recovery

    No "undo" functionality. It's also very easy to destroy things D:

    1/5

*** Docs

    I suppose Emacs users can check out the bindings, but it would be
    nice to bind "?" to it, as notmuch does. Linking stuff to the wiki
    would be extra cool, too!

    2/5

** Hipster criteria meant for web. Not really applicable, but still...
*** Acessibility
    
    Nothing to meliorate the UX of blind people. I guess I should check
    out how well it plays with emacspeak, but that'll not be a priority
    until I find a blind user :)

    I'm somewhat deaf, so when in a laptop, I miss not being able to
    increase the volume over 100%. As gimme is merely an interface to
    XMMS2, there is nothing I can do about it, however.
    
    People with mental problems probably shouldn't be using GIMME,
    although I suspect they might be exactly the target audience :D

    There are no complicated chords on GIMME, so people with motor
    disabilities are in no trouble.

    5/5

*** Awareness
    
    GIMME is not multiuser, so doesn't apply.

    -/5

*** Collaboration

    GIMME is not multiuser, so doesn't apply.

    -/5

*** Consent

    Hmm, there are no catastrophic operations, so doesn't apply ATM. If
    I ever write a plugin to allow searching for torrents and stuff,
    I'll have to give this some consideration.

    -/5

*** Conversation

    GIMME is not multiuser, so doesn't apply.

    -/5

*** Emotion

    A music player is nothing more than a tool. I can't see where I can
    sneak in emotional consideration with any profit.

    -/5

*** Group

    No hipster lastfm etc support ATM.

    -/5

*** Identity

    GIMME is not multiuser, so doesn't apply.

    -/5

*** Portability

    GIMME is not multiuser, so doesn't apply.

    -/5

*** Privacy

    GIMME is not multiuser, so doesn't apply.

    -/5

*** Security

    GIMME is not multiuser, so doesn't apply.

    -/5
    
    
    
    
    
    
    
