* Info
  GIMME is an XMMS2 client for Emacs developed for
  Google's Summer of Code. You can read more about it
  [[http://xmms2.org/wiki/Client:GIMME][here]].

  It uses [[http://rubyforge.org/projects/sexp/][S-Expression]], a Ruby Library to deal with sexps.

* Quickstart
  Currently, you have to manually add your files to XMMS2 with the
  xmms2 utility. For example, to add everything under the '~/Music'
  folder, you would do /xmms2 add ~/Music/**/**/. Then, you can start
  to use GIMME's three interaces: (i) filter-view, (ii) tree-view and
  (iii) playlist-view.

  On GIMME's buffer, *!* goes to filter-view, which presents
  everything you have in your media library. Press, *>* to get a
  subset of your files by filtering them. This subset is called a
  collection, and pressing *<* will get you back to its parent.

  *@* gets you to tree-view, which presents a history of your
  filtering as a tree. You can save your favorite collections from
  there.

  *#* gets you to playlist-view, which is like most media
  players. There are many features on GIMME to explore. In any view,
  press /C-h m/, to get the available keybindings.
  
* Known bugs
  - When you delete the currently playing song, the playlist state
    gets inconsistent on the server
  - Sometimes when you jump to another view, the buffer is displayed
    without colors until you press a key. Perhaps an Emacs issue?

* Reference:
  - [[http://xmms2.org/wiki/Component:Ruby_bindings][Ruby Bindings]]
  - [[http://numbers.xmms.se/~tilman/ruby-api-docs-0.7/][xmmsclient's API]]

* New features

  GIMME got accepted into Google's Summer of Code again, so expect
  these new features to show up in the next few months:

  1) First things first
     - [X] Multiple buffer support
     - [X] Trees' format
     - [X] The playlist-updated broadcast
  2) New important features
    - [X] Kill/yank on regions
    - [ ] Advanced tag writer
    - [ ] New collections' format and parser
    - [ ] Operations directly on tree-view
    - [ ] Prepare it for Ruby 1.9
  3) Interface polishing
    - [ ] Better auto-completion
    - [ ] Emacs' plugins
    - [ ] Colors
    - [ ] Playlist presets
    - [ ] Spectrum
    - [ ] Standalone
  4) Less important new features
    - [ ] Updating collection
    - [ ] Plugins and configuration
    - [ ] Equalizer
    - [ ] gimme-lyrics
  5) Creating a community Screencasts
    - [ ] Wiki and list
    - [ ] Marketing
    - [ ] Packages
    - [ ] ELPA
  6) GIMME's new modes
    - [ ] faceted-view
    - [ ] augmented-mode
  7) Code Polishing
    - [ ] Faster
    - [ ] Process
    - [ ] Bug hunting
