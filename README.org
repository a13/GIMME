* Status and next steps

Now there is a rudimentary filter-view, and multiple issues have been fixed.

Next 10 Steps:
  1. Find out what is happening with the coll queries on the ruby part (filter view)
  2. Search history mechanism (filter view)
  3. Add/insert songs capabilities (filter)
  4. Finish working on the playlist-updated broadcast (playlist)
  5. Use some sort of session number to prevent songs added in a previous query to show up with <TAB> (playlist)
  6. Mess around with coloring and a mini-language for displaying the songs (playlist)
  7. Colorize the songs (filter view)
  8. Refactor the code (Etc)
  9. Blog post (Etc)

Filter View:
  1. Find out what is happening with the coll queries on the ruby part
  2. Search history mechanism
  3. Work on the keymap
  4. Work on some rudimentary alternative way of displaying the songs on the collection (perhaps by grouping them?)
  5. Colorize the songs
  6. Add/insert songs capabilities

Playlist View:
  1. Finish working on the playlist-updated broadcast
  2. Fix the bug involving adding a, eg, .txt file using another client
  3. Mess around with coloring and a mini-language for displaying the songs
  4. Recreate the undo function
  5. Recreate the kill/yank region functions
  6. Investigate the bug that shows up when you add way too many files to your playlist using another client
  7. Use some sort of session number to prevent songs added in a previous query to show up with <TAB>
  8. Deal with multiple instances of a song (see gimme-update-tags etc)
  9. Create some sort of debouncer to remove the unnecessary extra calls to gimme-update-tags
  10. Everytime you play a song, it updates the laststarted and timesplayed properties and thus triggers the gimme-update-tags, which somehow messes the highlighting.

Etc:
  1. Blog post
  2. Refactor the code

* Info
  GIMME is an XMMS2 client for Emacs currently being developed for
  Google's Summer of Code. You can read more about it at
  http://scorciapino.com/blog/archives/49, which has some mockups, too.

  It uses [[http://rubyforge.org/projects/sexp/][S-Expression]], a Ruby Library to deal with sexps.

* Reference:
  - [[http://xmms2.org/wiki/Component:Ruby_bindings][Ruby Bindings]]
  - [[http://numbers.xmms.se/~tilman/ruby-api-docs-0.7/][xmmsclient's API]]
* Pomodoros

  I wonder how much time I'll end up dedicating to GIMME...

  - **05/7**: 6 Adding tag-editing capabilities
  - **05/7**: 6 Polishing features added on the last few days. Filter view. Yay!
  - **04/7**: 6 Doing I don't know what
  - **03/7**: 10 struggling with XMMS and working on random things
  - **04/6**: 1 removing bugs
  - **03/6**: 3 refactoring the ruby code
  - **02/6**: 4 in vain looking for a bug
  - **01/6**: 17 fixing various issues and working on the broadcasts
  - **31/5**: 7 fixing the sexp reader and making things work
  - **30/5**: 9 adding features to the playlist-view
  - **28/5**: 8 pomodoros working on playlist-view
  - **27/5**: 2 pomodoros trying to fix the problem with long strings. I'll come back to it later.
  - **18/5**: 4 pomodoros fixing the print system
  - **07/5**: 7 pomodoros: 1 watching ruby screencasts, 2 messing with the sexp library, 4 coding and looking for documentation
  - **06/5**: 6 pomodoros: 3 watching ruby screencasts and 3 working on code
  - **05/5**: 3 pomodoros watching Ruby screencasts on metaprogramming
  - **03/5**: 6 pomodoros: 3 wresting with output plugins and 3 wrestling with an ugly macro :(
  - **30/4**: 1 pomodoro installing xmms and its libs in this machine
  - **29/4**: 5 pomodoros building a simple ruby+emacs example

